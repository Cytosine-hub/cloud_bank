<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i2f.train.userProvider.mapper.OperateRecordMapper">
  <resultMap id="BaseResultMap" type="com.i2f.train.starter.model.OperateRecord">
    <!--@mbg.generated-->
    <!--@Table operate_record-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
    <result column="remark3" jdbcType="VARCHAR" property="remark3" />
    <result column="in_account_id" jdbcType="VARCHAR" property="inAccountId" />
    <result column="out_account_id" jdbcType="VARCHAR" property="outAccountId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, `type`, `status`, `time`, remark1, remark2, remark3, in_account_id, 
    out_account_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from operate_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from operate_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.i2f.train.starter.model.OperateRecord">
    <!--@mbg.generated-->
    insert into operate_record (id, user_id, `type`, 
      `status`, `time`, remark1, 
      remark2, remark3, in_account_id, 
      out_account_id)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, now(), #{remark1,jdbcType=VARCHAR},
      #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, #{inAccountId,jdbcType=VARCHAR}, 
      #{outAccountId,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.i2f.train.starter.model.OperateRecord">
    <!--@mbg.generated-->
    insert into operate_record
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="time == null">
        `time`,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
      <if test="remark3 != null">
        remark3,
      </if>
      <if test="inAccountId != null">
        in_account_id,
      </if>
      <if test="outAccountId != null">
        out_account_id,
      </if>
      <if test="id != null">
        id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="time == null">
       now(),
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="inAccountId != null">
        #{inAccountId,jdbcType=VARCHAR},
      </if>
      <if test="outAccountId != null">
        #{outAccountId,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="addOpenAccountOperateRecord">
     insert into operate_record(id,user_id,type,status,time) values (#{id},#{userId},#{type},#{status},#{time})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.i2f.train.starter.model.OperateRecord">
    <!--@mbg.generated-->
    update operate_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="inAccountId != null">
        in_account_id = #{inAccountId,jdbcType=VARCHAR},
      </if>
      <if test="outAccountId != null">
        out_account_id = #{outAccountId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i2f.train.starter.model.OperateRecord">
    <!--@mbg.generated-->
    update operate_record
    set user_id = #{userId,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=TIMESTAMP},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR},
      in_account_id = #{inAccountId,jdbcType=VARCHAR},
      out_account_id = #{outAccountId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateById">
    update operate_record set `status` = #{success} where id = #{id}
  </update>

</mapper>